{"mappings":"AAAA,MAAM,eAAe;OAAI,SAAS,iBAAiB;CAAgB;AACnE,MAAM,QAAQ;OAAI,SAAS,iBAAiB;CAAe;AAG3D,IAAI;AAEJ,UAAU,KAAK,CAAA;IACX,UAAU;IACV;IACA,aAAa,QAAQ,CAAA;QACjB,MAAM,iBAAiB,SAAS;IACpC;AACJ;AAOA,SAAS;IACL,MAAM,SAAS;IACf,gBAAgB;AACpB;AAEA,eAAe;IACX,MAAM,MAAM;IAEZ,IAAI;QACA,MAAM,WAAW,MAAM,MAAM;QAC7B,IAAI,CAAC,SAAS,IAAI;YACd,QAAQ,IAAI;YACZ,OAAO,CAAC;QACZ;QACA,MAAM,OAAO,MAAM,SAAS;QAC5B,OAAO;IACX,EACA,OAAO,KAAK;QACR,QAAQ,IAAI,2CAA2C,IAAI;QAC3D,OAAO,CAAC;IACZ;AAGJ;AAGA,SAAS;IACL,MAAM,eAAe,aAAa,OAAO,CAAA,QAAS,MAAM,QAAQ,CAAC,EAAE;IACnE,MAAM,eAAe,SAAS,cAAc,eAAe,aAAa,KAAK;IAC7E,MAAM,SAAS,aAAa,UAAU;IACtC,OAAO;AACX;AAEA,SAAS;IACL,MAAM,QAAQ,CAAA,OAAQ,KAAK,UAAU,OAAO;AAChD;AAEA,SAAS,gBAAgB,MAAM;IAC3B;IACA,MAAM,QAAQ,CAAA;QACV,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,QAAQ,KAAK,CAAA,IAAK,EAAE,MAAM,kBAAkB,KAAK,QAAQ,KAAK,CAAC,aAAa,CAAC,OAAO;QAClH,KAAK,cAAc,eAAe,cAAc,QAAQ;QACxD,KAAK,cAAc,wBAAwB,cAAc,SAAS;QAClE,KAAK,cAAc,cAAc,cAAc,UAAU,IAAI,QAAQ;QACrE,KAAK,cAAc,uBAAuB,cAAc,WAAW,IAAI,QAAQ;QAE/E,OAAQ;YACJ,KAAK;gBACD,KAAK,cAAc,yBAAyB,cAAc;gBAC1D;YACJ,KAAK;gBACD,KAAK,cAAc,yBAAyB,cAAc;gBAC1D;YACJ,KAAK;gBACD,KAAK,cAAc,yBAAyB,cAAc;gBAC1D;QACR;IACJ;AACJ","sources":["script.js"],"sourcesContent":["const periodRadios = [...document.querySelectorAll(\"[data-radio]\")]\nconst items = [...document.querySelectorAll(\"[data-item]\")]\n\n\nlet allData\n\ngetData().then(d => {\n    allData = d\n    setupDashboard()\n    periodRadios.forEach(radio => {\n        radio.addEventListener(\"click\", setupDashboard)\n    })\n})\n\n\n\n\n\n\nfunction setupDashboard() {\n    const period = getSelectedPeriod()\n    renderDashboard(period)\n}\n\nasync function getData() {\n    const url = \"/data.json\"\n\n    try {\n        const response = await fetch(url)\n        if (!response.ok) {\n            console.log(\"Response wasn't OK!\")\n            return {}\n        }\n        const data = await response.json()\n        return data\n    }\n    catch (err) {\n        console.log(\"Yo, some errors happened, err.message: \", err.message)\n        return {}\n    }\n\n\n}\n\n\nfunction getSelectedPeriod() {\n    const checkedRadio = periodRadios.filter(radio => radio.checked)[0]\n    const checkedLabel = document.querySelector(\"label[for=\" + checkedRadio.id + \"]\")\n    const period = checkedLabel.innerText.toLowerCase()\n    return period\n}\n\nfunction removeLoading() {\n    items.forEach(item => item.classList.remove(\"dashboard__item--loading\"))\n}\n\nfunction renderDashboard(period) {\n    removeLoading()\n    items.forEach(item => {\n        const { current, previous } = allData.find(d => d.title.toLowerCase() === item.dataset.item)[\"timeframes\"][period]\n        item.querySelector(\"[data-time]\").textContent = current.toString()\n        item.querySelector(\"[data-previous-time]\").textContent = previous.toString()\n        item.querySelector(\"[data-hrs]\").textContent = current > 1 ? \"hrs\" : \"hr\"\n        item.querySelector(\"[data-previous-hrs]\").textContent = previous > 1 ? \"hrs\" : \"hr\"\n\n        switch (period) {\n            case \"daily\":\n                item.querySelector(\"[data-previous-title]\").textContent = \"Last Day\"\n                break\n            case \"weekly\":\n                item.querySelector(\"[data-previous-title]\").textContent = \"Last Week\"\n                break\n            case \"monthly\":\n                item.querySelector(\"[data-previous-title]\").textContent = \"Last Month\"\n                break\n        }\n    })\n}"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}